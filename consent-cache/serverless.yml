service: consent-management-cache

provider:
  name: aws
  runtime: nodejs12.x
  profile: privally
  region: sa-east-1
  timeout: 10
  stage: ${opt:stage, 'prod'}
  memorySize: 128
  versionFunctions: false
  package:
    excludeDevDependencies: false
    exclude:
      - .git/**
      - .vscode/**
      - .test/**

  environment: #Global Environment variables
    ${file(../configs/${self:provider.stage}.yml)}

  iamRoleStatements: # Permissions for all of your functions can be set here
    - Effect: Allow
      Action:
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
      Resource: 'arn:aws:sqs:${self:provider.region}:*:${self:custom.sqs-consent-management}'
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: 'arn:aws:lambda:${self:provider.region}:*:function:${self:custom.lambda-consent-save}'

custom:
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:service}-${self:custom.stage}
  sqs-consent-management: sqs-consent-management-cache-${self:custom.stage}
  lambda-consent-save: consent-management-cache-${self:custom.stage}-consentSave
  dynamo-consent-management: table-consent-management-${self:custom.stage}

functions:
  consentConsumer:
    handler: ./workers/consumer.run
    memorySize: 128
    timeout: 60
    events:
      # - sqs: arn:aws:sqs:${self:custom.region}:772000878796:${self:custom.sqs-consent-management}
      - schedule: 
          rate: rate(1 minute) # Rate Syntax
          # rate: cron(* * ? * * *) # Cron Syntax
          enabled: true # Trigger Enabled

  consentSave:
    handler: ./workers/consentSave.run
    memorySize: 128
    timeout: 30
    vpc:
      securityGroupIds:
        - sg-5bf9a93e
      subnetIds:
        - subnet-fd987b99
        - subnet-bd4d3bca
        - subnet-214ff178

resources:
  Resources:
    consentManagementQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs-consent-management}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60
        # FifoQueue: true

    # consentManagementDeadLetterQueue:
    #   Type: AWS::SQS::Queue
    #   Properties:
    #     QueueName: ${self:custom.sqs-consent-management}-dlq
    #     # FifoQueue: true
