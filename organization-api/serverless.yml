service: organization-consent-management

provider:
  name: aws
  endpointType: REGIONAL
  runtime: nodejs12.x
  profile: privally
  region: sa-east-1
  timeout: 10
  stage: ${opt:stage, 'prod'}
  memorySize: 128
  versionFunctions: false
  package:
    excludeDevDependencies: true
    exclude:
      - .git/**
      - .vscode/**
      - .test/**

  environment: #Global Environment variables
    ${file(../configs/${self:provider.stage}.yml)}

  iamRoleStatements: # Permissions for all of your functions can be set here
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:*:*:*'
custom:
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:service}-${self:custom.stage}
  dynamo-consent-management: table-consent-management-${self:custom.stage}
  lambda-consent-save: consent-management-cache-${self:custom.stage}-consentSave
  sqs-consent-management: sqs-consent-management-${self:custom.stage}
  stageTargets:
    dev:
      domain: dev-sandbox.api.privally.ws
      certificate: 'arn:aws:acm:sa-east-1:772000878796:certificate/0dfc4a90-633b-485c-a54c-41b16889b283'
    sandbox:
      domain: sandbox.api.privally.ws
      certificate: 'arn:aws:acm:sa-east-1:772000878796:certificate/0dfc4a90-633b-485c-a54c-41b16889b283'
    prod:
      domain: api.privally.ws
      certificate: 'arn:aws:acm:sa-east-1:772000878796:certificate/b3aacd15-7859-4022-9e6b-65c967eb9c03'
  target: ${self:custom.stageTargets.${self:custom.stage}}
  authorizer:
    default:
      name: authorizerAsset
      type: token
      identitySource: method.request.header.x-api-key
      resultTtlInSeconds: 0

  documentation:
    api:
      info:
        version: v0.0.1
        title: Privally Session Information
        description: API for Get Information of Session
    models:
      - name: organizationEnableRequest
        contentType: application/json
        schema:
          type: 'object'
          properties:
            organizationId:
              type: 'string'
            isActive:
              type: 'boolean'
            isDeleted:
              type: 'boolean'
            assets:
              type: 'array'
              items:
                type: 'object'
                properties:
                  assetId:
                    type: 'string'
                  url:
                    type: 'string'
                  isActive:
                    type: 'boolean'
                  isDeleted:
                    type: 'boolean'
            identifiers:
              type: 'array'
              items:
                type: 'object'
                properties:
                  identifierId:
                    type: 'string'
                  key:
                    type: 'string'
                  isActive:
                    type: 'boolean'
                  isDeleted:
                    type: 'boolean'

  customDomain:
    domainName: ${self:custom.target.domain}
    stage: ${self:provider.stage}
    basePath: organization
    certificateArn: ${self:custom.target.certificate}
    createRoute53Record: true
    endpointType: 'regional'
    securityPolicy: tls_1_2
    apiType: rest
    autoDomain: false

plugins:
  - serverless-reqvalidator-plugin
  - serverless-aws-documentation
  - serverless-domain-manager

functions:
  # authorizerAsset:
  #   handler: endpoints/authorizer.authorizer

  enable:
    handler: ./endpoints/enable.run
    memorySize: 128
    timeout: 30
    events:
      - http:
          path: enable
          method: post
          cors: true
          # authorizer: ${self:custom.authorizer.default}
          documentation:
            summary: Create a new Organization to Privally
            description: This endpoint save a  list of organizations, identifiers and assets
            requestBody:
              description: Request body for create a new Organization
            # requestModels:
          #     application/json: 'organizationEnableRequest'
          # reqValidatorName: onlyBody
  update:
    handler: ./endpoints/update.run
    memorySize: 128
    timeout: 30
    events:
      - http:
          path: enable
          method: put
          cors: true
          # authorizer: ${self:custom.authorizer.default}
          documentation:
            summary: Create a new Organization to Privally
            description: This endpoint save a  list of organizations, identifiers and assets
            requestBody:
              description: Request body for create a new Organization
          #   requestModels:
          #     application/json: 'organizationEnableRequest'
          # reqValidatorName: onlyBody
resources:
  Resources:
    onlyBody:
      Type: 'AWS::ApiGateway::RequestValidator'
      Properties:
        Name: 'only-body'
        RestApiId:
          Ref: ApiGatewayRestApi
        ValidateRequestBody: true
        ValidateRequestParameters: true

    consentManagementTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamo-consent-management}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: data_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: PK-data_key-Filter
            KeySchema:
              - AttributeName: PK
                KeyType: HASH
              - AttributeName: data_key
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: data_key-filter
            KeySchema:
              - AttributeName: data_key
                KeyType: HASH
            Projection:
              ProjectionType: ALL